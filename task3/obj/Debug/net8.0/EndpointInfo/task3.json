{
  "openapi": "3.0.1",
  "info": {
    "title": "Система управления проектной деятельностью",
    "description": "Система предназначена для организации проектной деятельности в образовательном учреждении (колледже/вузе). \n\nПозволяет управлять учебными курсами, студенческими группами, проектами и оценками.",
    "contact": {
      "name": "Пример контакта",
      "url": "https://example.com/contact"
    },
    "license": {
      "name": "Пример лицензии",
      "url": "https://example.com/license"
    },
    "version": "v1"
  },
  "paths": {
    "/api/Course": {
      "get": {
        "tags": [
          "Course"
        ],
        "summary": "Получение списка всех курсов",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Course"
        ],
        "summary": "Создание нового курса",
        "description": "Пример запроса:\r\n            \r\n    POST /Todo\r\n    {\r\n        \"courseName\": \"Программирование на C#\",\r\n        \"teacherId\": 1\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.Course.CreateCourseRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.Course.CreateCourseRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.Course.CreateCourseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Course"
        ],
        "summary": "Обновление данных курса",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.Course.CreateCourseRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.Course.CreateCourseRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.Course.CreateCourseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Course/{id}": {
      "get": {
        "tags": [
          "Course"
        ],
        "summary": "Получение курса по идентификатору",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор курса",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Course"
        ],
        "summary": "Удаление курса по идентификатору",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор курса",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Department": {
      "get": {
        "tags": [
          "Department"
        ],
        "summary": "Получение списка всех кафедр",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Department"
        ],
        "summary": "Создание новой кафедры",
        "description": "Пример запроса:\r\n            \r\n    POST /Todo\r\n    {\r\n        \"departmentName\": \"Кафедра информационных технологий\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.Grade.CreateGradeRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.Grade.CreateGradeRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.Grade.CreateGradeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Department"
        ],
        "summary": "Обновление данных кафедры",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.Grade.CreateGradeRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.Grade.CreateGradeRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.Grade.CreateGradeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Department/{id}": {
      "get": {
        "tags": [
          "Department"
        ],
        "summary": "Получение кафедры по идентификатору",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор кафедры",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Department"
        ],
        "summary": "Удаление кафедры по идентификатору",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор кафедры",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Grade": {
      "get": {
        "tags": [
          "Grade"
        ],
        "summary": "Получение списка всех оценок",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Grade"
        ],
        "summary": "Получение оценки по идентификатору",
        "description": "Пример запроса:\r\n            \r\n    POST /Todo\r\n    {\r\n        \"submissionId\": 1,\r\n        \"teacherId\": 1,\r\n        \"score\": 18,\r\n        \"feedback\": \"Отличное проектирование архитектуры\",\r\n        \"gradingDate\": \"2025-09-12\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.Grade.CreateGradeRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.Grade.CreateGradeRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.Grade.CreateGradeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Grade"
        ],
        "summary": "Обновление данных оценки",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.Grade.CreateGradeRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.Grade.CreateGradeRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.Grade.CreateGradeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Grade/{id}": {
      "get": {
        "tags": [
          "Grade"
        ],
        "summary": "Получение оценки по идентификатору",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор оценки",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Grade"
        ],
        "summary": "Удаление оценки по идентификатору",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор оценки",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Group": {
      "get": {
        "tags": [
          "Group"
        ],
        "summary": "Получение списка всех групп",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Group"
        ],
        "summary": "Создание новой группы",
        "description": "Пример запроса:\r\n            \r\n    POST /Todo\r\n    {\r\n         \"groupName\": \"24ИС-21-2\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.Group.CreateGroupRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.Group.CreateGroupRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.Group.CreateGroupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Group"
        ],
        "summary": "Обновление данных группы",
        "description": "Пример запроса:\r\n            \r\n    POST /Todo\r\n    {\r\n         \"groupName\": \"24ИС-21-2\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.Group.CreateGroupRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.Group.CreateGroupRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.Group.CreateGroupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Group/{id}": {
      "get": {
        "tags": [
          "Group"
        ],
        "summary": "Получение группы по идентификатору",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор группы",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Group"
        ],
        "summary": "Удаление группы по идентификатору",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор группы",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Project": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Получение списка всех проектов",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Создание нового проекта",
        "description": "Пример запроса:\r\n            \r\n    POST /Todo\r\n    {\r\n        \"projectName\": \"Курсовой проект по C#\",\r\n        \"description\": \"Разработка консольного приложения\",\r\n        \"courseId\": 1,\r\n        \"maxScore\": 100,\r\n        \"deadline\": \"2025-09-12\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.Project.CreateProjectRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.Project.CreateProjectRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.Project.CreateProjectRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Project"
        ],
        "summary": "Обновление данных проекта",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.Project.CreateProjectRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.Project.CreateProjectRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.Project.CreateProjectRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Project/{id}": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Получение проекта по идентификатору",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор проекта",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Project"
        ],
        "summary": "Удаление проекта по идентификатору",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор проекта",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ProjectTeam": {
      "get": {
        "tags": [
          "ProjectTeam"
        ],
        "summary": "Получение списка всех проектных команд",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "ProjectTeam"
        ],
        "summary": "Создание новой проектной команды",
        "description": "Пример запроса:\r\n            \r\n    POST /Todo\r\n    {\r\n        \"teamName\": \"Команда Alpha\",\r\n        \"projectId\": 1\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.ProjectTeam.CreateProjectTeamRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.ProjectTeam.CreateProjectTeamRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.ProjectTeam.CreateProjectTeamRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "ProjectTeam"
        ],
        "summary": "Обновление данных проектной команды",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.ProjectTeam.CreateProjectTeamRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.ProjectTeam.CreateProjectTeamRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.ProjectTeam.CreateProjectTeamRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ProjectTeam/{id}": {
      "get": {
        "tags": [
          "ProjectTeam"
        ],
        "summary": "Получение проектной команды по идентификатору",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор проектной команды",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "ProjectTeam"
        ],
        "summary": "Удаление проектной команды по идентификатору",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор проектной команды",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/StudentTeam": {
      "get": {
        "tags": [
          "StudentTeam"
        ],
        "summary": "Получение списка всех студенческих команд",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "StudentTeam"
        ],
        "summary": "Создание новой студенческой команды",
        "description": "Пример запроса:\r\n            \r\n    POST /Todo\r\n    {\r\n        \"studentId\": 1,\r\n        \"teamId\": 1,\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.StudentTeam.CreateStudentTeamRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.StudentTeam.CreateStudentTeamRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.StudentTeam.CreateStudentTeamRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "StudentTeam"
        ],
        "summary": "Обновление данных студенческой команды",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.StudentTeam.CreateStudentTeamRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.StudentTeam.CreateStudentTeamRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.StudentTeam.CreateStudentTeamRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/StudentTeam/{id}": {
      "get": {
        "tags": [
          "StudentTeam"
        ],
        "summary": "Получение студенческой команды по идентификатору",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор студенческой команды",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "StudentTeam"
        ],
        "summary": "Удаление студенческой команды по идентификатору",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор студенческой команды",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Submission": {
      "get": {
        "tags": [
          "Submission"
        ],
        "summary": "Получение списка всех отправленных работ",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Submission"
        ],
        "summary": "Создание новой отправленной работы",
        "description": "Пример запроса:\r\n            \r\n    POST /Todo\r\n    {\r\n        \"teamId\": 1,\r\n        \"taskId\": 1,\r\n        \"submissionDate\": \"2025-09-12 23:20:00\",\r\n        \"filePath\": \"/files/analysis.docx\",\r\n        \"status\": \"submitted\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.Submission.CreateSubmissionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.Submission.CreateSubmissionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.Submission.CreateSubmissionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Submission"
        ],
        "summary": "Обновление данных отправленной работы",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.Submission.CreateSubmissionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.Submission.CreateSubmissionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.Submission.CreateSubmissionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Submission/{id}": {
      "get": {
        "tags": [
          "Submission"
        ],
        "summary": "Получение отправленной работы по идентификатору",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор отправленной работы",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Submission"
        ],
        "summary": "Удаление отправленной работы по идентификатору",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор отправленной работы",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Task": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "Получение списка всех задач",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Task"
        ],
        "summary": "Создание новой задачи",
        "description": "Пример запроса:\r\n            \r\n    POST /Todo\r\n    {\r\n        \"TaskName\": Проектирование БД,\r\n        \"ProjectId\": \"1\",\r\n        \"TaskDeadline\": \"2025-09-12\",\r\n        \"TaskMaxScore\": 100\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.Task.CreateTaskRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.Task.CreateTaskRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.Task.CreateTaskRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Task"
        ],
        "summary": "Обновление данных задачи",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.Task.CreateTaskRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.Task.CreateTaskRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.Task.CreateTaskRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Task/{id}": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "Получение задачи по идентификатору",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор задачи",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Task"
        ],
        "summary": "Удаление задачи по идентификатору",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор задачи",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/": {
      "get": {
        "tags": [
          "task3"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Teacher": {
      "get": {
        "tags": [
          "Teacher"
        ],
        "summary": "Получение списка всех преподавателей",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Teacher"
        ],
        "summary": "Создание нового преподавателя",
        "description": "Пример запроса:\r\n            \r\n    POST /Todo\r\n    {\r\n        \"FirstName\": Иван,\r\n        \"LastName\": \"Иванов\",\r\n        \"DepartmentId\": 1\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.Teacher.CreateTeacherRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.Teacher.CreateTeacherRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.Teacher.CreateTeacherRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Teacher"
        ],
        "summary": "Обновление данных преподавателя",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.Teacher.CreateTeacherRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.Teacher.CreateTeacherRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.Teacher.CreateTeacherRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Teacher/{id}": {
      "get": {
        "tags": [
          "Teacher"
        ],
        "summary": "Получение преподавателя по идентификатору",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор преподавателя",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Teacher"
        ],
        "summary": "Удаление преподавателя по идентификатору",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор преподавателя",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Получение списка всех студентов",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Создание нового студента",
        "description": "Пример запроса:\r\n            \r\n    POST /Todo\r\n    {\r\n       \"firstName\" : \"Иван\",\r\n       \"lastname\" : \"Иванов\",\r\n       \"groupId\" : \"1\",\r\n    }",
        "requestBody": {
          "description": "Данные студента",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.User.CreateUserRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.User.CreateUserRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.User.CreateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Обновление данных студента",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.User.CreateUserRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.User.CreateUserRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/task3.Contracts.User.CreateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Удаление студента по идентификатору",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Идентификатор студента",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Получение студента по идентификатору",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор пользователя",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/WeatherForecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "operationId": "GetWeatherForecast",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/task3.WeatherForecast"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/task3.WeatherForecast"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/task3.WeatherForecast"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "task3.Contracts.Course.CreateCourseRequest": {
        "type": "object",
        "properties": {
          "courseName": {
            "type": "string",
            "nullable": true
          },
          "teacherId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "task3.Contracts.Grade.CreateGradeRequest": {
        "type": "object",
        "properties": {
          "submissionId": {
            "type": "integer",
            "format": "int32"
          },
          "teacherId": {
            "type": "integer",
            "format": "int32"
          },
          "score": {
            "type": "integer",
            "format": "int32"
          },
          "feedback": {
            "type": "string",
            "nullable": true
          },
          "gradingDate": {
            "type": "string",
            "format": "date"
          }
        },
        "additionalProperties": false
      },
      "task3.Contracts.Group.CreateGroupRequest": {
        "type": "object",
        "properties": {
          "groupName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "task3.Contracts.Project.CreateProjectRequest": {
        "type": "object",
        "properties": {
          "projectName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "courseId": {
            "type": "integer",
            "format": "int32"
          },
          "maxScore": {
            "type": "integer",
            "format": "int32"
          },
          "deadline": {
            "type": "string",
            "format": "date"
          }
        },
        "additionalProperties": false
      },
      "task3.Contracts.ProjectTeam.CreateProjectTeamRequest": {
        "type": "object",
        "properties": {
          "teamName": {
            "type": "string",
            "nullable": true
          },
          "projectId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "task3.Contracts.StudentTeam.CreateStudentTeamRequest": {
        "type": "object",
        "properties": {
          "studentId": {
            "type": "integer",
            "format": "int32"
          },
          "teamId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "task3.Contracts.Submission.CreateSubmissionRequest": {
        "type": "object",
        "properties": {
          "teamId": {
            "type": "integer",
            "format": "int32"
          },
          "taskId": {
            "type": "integer",
            "format": "int32"
          },
          "submissionDate": {
            "type": "string",
            "format": "date-time"
          },
          "filePath": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "task3.Contracts.Task.CreateTaskRequest": {
        "type": "object",
        "properties": {
          "taskName": {
            "type": "string",
            "nullable": true
          },
          "projectId": {
            "type": "integer",
            "format": "int32"
          },
          "taskDeadline": {
            "type": "string",
            "format": "date"
          },
          "taskMaxScore": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "task3.Contracts.Teacher.CreateTeacherRequest": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "departmentId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "task3.Contracts.User.CreateUserRequest": {
        "type": "object",
        "properties": {
          "studentId": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "groupId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "task3.WeatherForecast": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}