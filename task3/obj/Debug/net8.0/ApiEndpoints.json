[
  {
    "ContainingType": "task3.Program\u002B\u003C\u003Ec",
    "Method": "\u003CMain\u003Eb__0_3",
    "RelativePath": "",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.String",
        "MediaTypes": [
          "text/plain"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "BackendApi.Controllers.CourseController",
    "Method": "GetAll",
    "RelativePath": "api/Course",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.CourseController",
    "Method": "Add",
    "RelativePath": "api/Course",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "task3.Contracts.Course.CreateCourseRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.CourseController",
    "Method": "Update",
    "RelativePath": "api/Course",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "task3.Contracts.Course.CreateCourseRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.CourseController",
    "Method": "GetById",
    "RelativePath": "api/Course/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.CourseController",
    "Method": "Delete",
    "RelativePath": "api/Course/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.DepartmentController",
    "Method": "GetAll",
    "RelativePath": "api/Department",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.DepartmentController",
    "Method": "Add",
    "RelativePath": "api/Department",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "task3.Contracts.Grade.CreateGradeRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.DepartmentController",
    "Method": "Update",
    "RelativePath": "api/Department",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "task3.Contracts.Grade.CreateGradeRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.DepartmentController",
    "Method": "GetById",
    "RelativePath": "api/Department/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.DepartmentController",
    "Method": "Delete",
    "RelativePath": "api/Department/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.GradeController",
    "Method": "GetAll",
    "RelativePath": "api/Grade",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.GradeController",
    "Method": "Add",
    "RelativePath": "api/Grade",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "task3.Contracts.Grade.CreateGradeRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.GradeController",
    "Method": "Update",
    "RelativePath": "api/Grade",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "task3.Contracts.Grade.CreateGradeRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.GradeController",
    "Method": "GetById",
    "RelativePath": "api/Grade/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.GradeController",
    "Method": "Delete",
    "RelativePath": "api/Grade/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.GroupController",
    "Method": "GetAll",
    "RelativePath": "api/Group",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.GroupController",
    "Method": "Add",
    "RelativePath": "api/Group",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "task3.Contracts.Group.CreateGroupRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.GroupController",
    "Method": "Update",
    "RelativePath": "api/Group",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "task3.Contracts.Group.CreateGroupRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.GroupController",
    "Method": "GetById",
    "RelativePath": "api/Group/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.GroupController",
    "Method": "Delete",
    "RelativePath": "api/Group/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.ProjectController",
    "Method": "GetAll",
    "RelativePath": "api/Project",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.ProjectController",
    "Method": "Add",
    "RelativePath": "api/Project",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "task3.Contracts.Project.CreateProjectRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.ProjectController",
    "Method": "Update",
    "RelativePath": "api/Project",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "task3.Contracts.Project.CreateProjectRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.ProjectController",
    "Method": "GetById",
    "RelativePath": "api/Project/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.ProjectController",
    "Method": "Delete",
    "RelativePath": "api/Project/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.ProjectTeamController",
    "Method": "GetAll",
    "RelativePath": "api/ProjectTeam",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.ProjectTeamController",
    "Method": "Add",
    "RelativePath": "api/ProjectTeam",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "task3.Contracts.ProjectTeam.CreateProjectTeamRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.ProjectTeamController",
    "Method": "Update",
    "RelativePath": "api/ProjectTeam",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "task3.Contracts.ProjectTeam.CreateProjectTeamRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.ProjectTeamController",
    "Method": "GetById",
    "RelativePath": "api/ProjectTeam/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.ProjectTeamController",
    "Method": "Delete",
    "RelativePath": "api/ProjectTeam/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.StudentTeamController",
    "Method": "GetAll",
    "RelativePath": "api/StudentTeam",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.StudentTeamController",
    "Method": "Add",
    "RelativePath": "api/StudentTeam",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "task3.Contracts.StudentTeam.CreateStudentTeamRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.StudentTeamController",
    "Method": "Update",
    "RelativePath": "api/StudentTeam",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "task3.Contracts.StudentTeam.CreateStudentTeamRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.StudentTeamController",
    "Method": "GetById",
    "RelativePath": "api/StudentTeam/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.StudentTeamController",
    "Method": "Delete",
    "RelativePath": "api/StudentTeam/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.SubmissionController",
    "Method": "GetAll",
    "RelativePath": "api/Submission",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.SubmissionController",
    "Method": "Add",
    "RelativePath": "api/Submission",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "task3.Contracts.Submission.CreateSubmissionRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.SubmissionController",
    "Method": "Update",
    "RelativePath": "api/Submission",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "task3.Contracts.Submission.CreateSubmissionRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.SubmissionController",
    "Method": "GetById",
    "RelativePath": "api/Submission/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.SubmissionController",
    "Method": "Delete",
    "RelativePath": "api/Submission/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.TaskController",
    "Method": "GetAll",
    "RelativePath": "api/Task",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.TaskController",
    "Method": "Add",
    "RelativePath": "api/Task",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "task3.Contracts.Task.CreateTaskRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.TaskController",
    "Method": "Update",
    "RelativePath": "api/Task",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "task3.Contracts.Task.CreateTaskRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.TaskController",
    "Method": "GetById",
    "RelativePath": "api/Task/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.TaskController",
    "Method": "Delete",
    "RelativePath": "api/Task/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.TeacherController",
    "Method": "GetAll",
    "RelativePath": "api/Teacher",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.TeacherController",
    "Method": "Add",
    "RelativePath": "api/Teacher",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "task3.Contracts.Teacher.CreateTeacherRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.TeacherController",
    "Method": "Update",
    "RelativePath": "api/Teacher",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "task3.Contracts.Teacher.CreateTeacherRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.TeacherController",
    "Method": "GetById",
    "RelativePath": "api/Teacher/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.TeacherController",
    "Method": "Delete",
    "RelativePath": "api/Teacher/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.UserController",
    "Method": "GetAll",
    "RelativePath": "api/User",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.UserController",
    "Method": "Add",
    "RelativePath": "api/User",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "task3.Contracts.User.CreateUserRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.UserController",
    "Method": "Update",
    "RelativePath": "api/User",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "task3.Contracts.User.CreateUserRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.UserController",
    "Method": "Delete",
    "RelativePath": "api/User",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.UserController",
    "Method": "GetById",
    "RelativePath": "api/User/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "task3.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[task3.WeatherForecast, task3, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]